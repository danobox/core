<?xml version="1.0" encoding="utf-8"?>
<application xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://wadl.dev.java.net/2009/02" xmlns:tns="https://virtserver.swaggerhub.com/danhunsaker/Microbox/1.0.0/schemas">
  <doc title="Microbox Core API" xml:lang="en">The full API spec for Microbox Core, and other Nanobox-v1-compatible dashboard and coordination servers.</doc>
  <grammars>
    <xs:schema xmlns:tns="https://virtserver.swaggerhub.com/danhunsaker/Microbox/1.0.0/schemas" targetNamespace="https://virtserver.swaggerhub.com/danhunsaker/Microbox/1.0.0/schemas" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="App" type="tns:App" />
      <xs:element name="Component" type="tns:Component" />
      <xs:element name="Deploy" type="tns:Deploy" />
      <xs:element name="Evar" type="tns:Evar" />
      <xs:element name="Service" type="tns:Service" />
      <xs:element name="User" type="tns:User" />
      <xs:element name="anything" type="tns:anything" />
      <xs:element name="AppsConsolesResponse" type="tns:AppsConsolesResponse" />
      <xs:element name="AppsDeploysRequest" type="tns:AppsDeploysRequest" />
      <xs:element name="AppsEvarsRequest" type="tns:AppsEvarsRequest" />
      <xs:element name="AppsTunnelsResponse" type="tns:AppsTunnelsResponse" />
      <xs:element name="Event" type="tns:Event" />
      <xs:element name="Events422Error" type="tns:Events422Error" />
      <xs:element name="EventsRequest" type="tns:EventsRequest" />
      <xs:element name="EventsResponse" type="tns:EventsResponse" />
      <xs:element name="Response" type="tns:Response" />
      <xs:element name="UserAuthTokenResponse" type="tns:UserAuthTokenResponse" />
      <xs:element name="UsersAuthTokenResponse" type="tns:UsersAuthTokenResponse" />
      <xs:element name="listApps_Response" type="tns:listApps_Response" />
      <xs:element name="getApp_Response" type="tns:getApp_Response" />
      <xs:element name="listComponents_Response" type="tns:listComponents_Response" />
      <xs:element name="getComponent_Response" type="tns:getComponent_Response" />
      <xs:element name="listServiceComponents_Response" type="tns:listServiceComponents_Response" />
      <xs:element name="getServiceComponent_Response" type="tns:getServiceComponent_Response" />
      <xs:element name="listDeploys_Response" type="tns:listDeploys_Response" />
      <xs:element name="createDeploy_Response" type="tns:createDeploy_Response" />
      <xs:element name="getDeploy_Response" type="tns:getDeploy_Response" />
      <xs:element name="listEvars_Response" type="tns:listEvars_Response" />
      <xs:element name="createEvar_Response" type="tns:createEvar_Response" />
      <xs:element name="getEvar_Response" type="tns:getEvar_Response" />
      <xs:element name="createEvent_Response" type="tns:createEvent_Response" />
      <xs:element name="createEvent_422Error" type="tns:createEvent_422Error" />
      <xs:element name="openTunnel_Response" type="tns:openTunnel_Response" />
      <xs:element name="openConsole_Response" type="tns:openConsole_Response" />
      <xs:element name="listServices_Response" type="tns:listServices_Response" />
      <xs:element name="getService_Response" type="tns:getService_Response" />
      <xs:element name="getToken_Response" type="tns:getToken_Response" />
      <xs:element name="getTokenFromUsername_Response" type="tns:getTokenFromUsername_Response" />
      <xs:element name="getUser_Response" type="tns:getUser_Response" />
      <xs:element name="getVersion_Response" type="tns:getVersion_Response" />
      <xs:complexType name="App">
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="name">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="timezone">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="state">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="auto_reconfigure" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Component">
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="name">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="uid">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="deploy_strategy">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="repair_strategy">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="behaviors">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="port">
            <xs:simpleType>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="state">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="pulse">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="category">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="network">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="generation_counter">
            <xs:simpleType>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="horizontal" type="xs:boolean" />
          <xs:element minOccurs="0" name="redundant" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Deploy">
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="commit_message">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="boxfile_content">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="build_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="author_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="app_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Evar">
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="value">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="internal" type="xs:boolean" />
          <xs:element minOccurs="0" name="component_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Service">
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="uid">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="name">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="slug">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="url">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="token">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="mode">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ip">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="User">
        <xs:sequence>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="username">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="email">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="authentication_token">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="unconfirmed_email" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="anything">
        <xs:restriction base="xs:string">
          <xs:enumeration value="me" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AppsConsolesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="token">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="url">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="protocol">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AppsDeploysRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="boxfile_content">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="build_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="commit_message">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AppsEvarsRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="title">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="value">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AppsTunnelsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="token">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="url">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="protocol">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="port">
            <xs:simpleType>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Event">
        <xs:annotation>
          <xs:documentation>the details to create the event with</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="eventable_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the app name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="message">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the message</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="action">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the action</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="meta" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>any additional data</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Events422Error">
        <xs:sequence>
          <xs:element minOccurs="0" name="error">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EventsRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="event" type="tns:Event">
            <xs:annotation>
              <xs:documentation>the details to create the event with</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EventsResponse">
        <xs:annotation>
          <xs:documentation>the details of the created event</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="user" type="tns:User" />
          <xs:element minOccurs="0" name="eventable" type="tns:App" />
          <xs:element minOccurs="0" name="message">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the message</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="action">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the action</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="meta" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>any meta data passed in</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Response">
        <xs:sequence>
          <xs:element minOccurs="0" name="name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the name of the API provider</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the API version</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserAuthTokenResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="authentication_token">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the user's authentication token, for accessing this API</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the UUID of the user</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UsersAuthTokenResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="authentication_token">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the user's authentication token, for accessing this API</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>the UUID of the user</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listApps_Response">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="response" type="tns:App">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getApp_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:App">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listComponents_Response">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="response" type="tns:Component">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getComponent_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:Component">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listServiceComponents_Response">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="response" type="tns:Component">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getServiceComponent_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:Component">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listDeploys_Response">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="response" type="tns:Deploy">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDeploy_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:Deploy">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDeploy_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:Deploy">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listEvars_Response">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="response" type="tns:Evar">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createEvar_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:Evar">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getEvar_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:Evar">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createEvent_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:EventsResponse">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createEvent_422Error">
        <xs:sequence>
          <xs:element minOccurs="1" name="error" type="tns:Events422Error">
            <xs:annotation>
              <xs:documentation>unprocessable_entity</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openTunnel_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:AppsTunnelsResponse">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openConsole_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:AppsConsolesResponse">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listServices_Response">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="response" type="tns:Service">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getService_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:Service">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getToken_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:UserAuthTokenResponse">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTokenFromUsername_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:UsersAuthTokenResponse">
            <xs:annotation>
              <xs:documentation>success</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUser_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:User">
            <xs:annotation>
              <xs:documentation>User object</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersion_Response">
        <xs:sequence>
          <xs:element minOccurs="1" name="response" type="tns:Response">
            <xs:annotation>
              <xs:documentation>A JSON object with the name and version of the API.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </grammars>
  <resources base="https://virtserver.swaggerhub.com/danhunsaker/Microbox/1.0.0">
    <resource id="_apps" path="/apps">
      <method id="listApps" name="GET">
        <doc title="listApps" xml:lang="en">List all accessible apps.</doc>
        <request />
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:listApps_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsapp" path="/apps/{app}">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <method id="getApp" name="GET">
        <doc title="getApp" xml:lang="en">Get information about a specific app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:getApp_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappcomponents" path="/apps/{app}/components">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <method id="listComponents" name="GET">
        <doc title="listComponents" xml:lang="en">List components in a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:listComponents_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappcomponentscomponent" path="/apps/{app}/components/{component}">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="component" style="template" type="xsd:string" required="true">
        <doc title="component" xml:lang="en">the component's UUID</doc>
      </param>
      <method id="getComponent" name="GET">
        <doc title="getComponent" xml:lang="en">Get information about a specific component in a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:getComponent_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappservicesservicecomponents" path="/apps/{app}/services/{service}/components">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="service" style="template" type="xsd:string" required="true">
        <doc title="service" xml:lang="en">the service's UUID or slug</doc>
      </param>
      <method id="listServiceComponents" name="GET">
        <doc title="listServiceComponents" xml:lang="en">List components in a given service of a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:listServiceComponents_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappservicesservicecomponentscomponent" path="/apps/{app}/services/{service}/components/{component}">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="service" style="template" type="xsd:string" required="true">
        <doc title="service" xml:lang="en">the service's UUID or slug</doc>
      </param>
      <param name="component" style="template" type="xsd:string" required="true">
        <doc title="component" xml:lang="en">the component's UUID</doc>
      </param>
      <method id="getServiceComponent" name="GET">
        <doc title="getServiceComponent" xml:lang="en">Get information about a specific component in a given service of a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:getServiceComponent_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappdeploys" path="/apps/{app}/deploys">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <method id="listDeploys" name="GET">
        <doc title="listDeploys" xml:lang="en">List deploys in a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:listDeploys_Response" mediaType="application/json" />
        </response>
      </method>
      <method id="createDeploy" name="POST">
        <doc title="createDeploy" xml:lang="en">Create a new deploy.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
          <representation element="tns:AppsDeploysRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:createDeploy_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappdeploysdeploy" path="/apps/{app}/deploys/{deploy}">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="deploy" style="template" type="xsd:string" required="true">
        <doc title="deploy" xml:lang="en">the deploy's UUID</doc>
      </param>
      <method id="getDeploy" name="GET">
        <doc title="getDeploy" xml:lang="en">Get information about a specific deploy in a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:getDeploy_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappevars" path="/apps/{app}/evars">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <method id="listEvars" name="GET">
        <doc title="listEvars" xml:lang="en">List environment variables in a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:listEvars_Response" mediaType="application/json" />
        </response>
      </method>
      <method id="createEvar" name="POST">
        <doc title="createEvar" xml:lang="en">Add or set an environment variable.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
          <representation element="tns:AppsEvarsRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:createEvar_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappevarsevar" path="/apps/{app}/evars/{evar}">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="evar" style="template" type="xsd:string" required="true">
        <doc title="evar" xml:lang="en">the evar's UUID</doc>
      </param>
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="evar" style="template" type="xsd:string" required="true">
        <doc title="evar" xml:lang="en">the evar's UUID</doc>
      </param>
      <method id="getEvar" name="GET">
        <doc title="getEvar" xml:lang="en">Get information about a specific environment variable in a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:getEvar_Response" mediaType="application/json" />
        </response>
      </method>
      <method id="deleteEvar" name="DELETE">
        <doc title="deleteEvar" xml:lang="en">Delete an environment variable.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
        </response>
      </method>
    </resource>
    <resource id="_events" path="/events">
      <method id="createEvent" name="POST">
        <doc title="createEvent" xml:lang="en">Create an event</doc>
        <request>
          <representation element="tns:EventsRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:createEvent_Response" mediaType="application/json" />
        </response>
        <response status="422">
          <doc title="422" xml:lang="en">unprocessable_entity</doc>
          <representation element="tns:createEvent_422Error" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsapptunnelsid" path="/apps/{app}/tunnels/{id}">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="id" style="template" type="xsd:string" required="true">
        <doc title="id" xml:lang="en">the name of the server or component to tunnel into</doc>
      </param>
      <method id="openTunnel" name="GET">
        <doc title="openTunnel" xml:lang="en">Create a tunnel, and get the connection parameters.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:openTunnel_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappconsolesid" path="/apps/{app}/consoles/{id}">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="id" style="template" type="xsd:string" required="true">
        <doc title="id" xml:lang="en">the name of the server or component to console into</doc>
      </param>
      <method id="openConsole" name="GET">
        <doc title="openConsole" xml:lang="en">Create a console session, and get the connection parameters.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:openConsole_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappservices" path="/apps/{app}/services">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <method id="listServices" name="GET">
        <doc title="listServices" xml:lang="en">List services in a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:listServices_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_appsappservicesservice" path="/apps/{app}/services/{service}">
      <param name="app" style="template" type="xsd:string" required="true">
        <doc title="app" xml:lang="en">the application's UUID or name</doc>
      </param>
      <param name="service" style="template" type="xsd:string" required="true">
        <doc title="service" xml:lang="en">the service's UUID or slug</doc>
      </param>
      <method id="getService" name="GET">
        <doc title="getService" xml:lang="en">Get information about a specific service in a given app.</doc>
        <request>
          <param name="ci" style="query" type="xsd:string">
            <doc title="ci" xml:lang="en">the application's team name, if `{app}` is a name</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:getService_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_user_auth_token" path="/user_auth_token">
      <method id="getToken" name="GET">
        <doc title="getToken" xml:lang="en">Look up the auth token of the user</doc>
        <request>
          <param name="slug" style="query" type="xsd:string" required="true">
            <doc title="slug" xml:lang="en">email address of the user</doc>
          </param>
          <param name="password" style="query" type="xsd:string" required="true">
            <doc title="password" xml:lang="en">password of the user</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:getToken_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_usersslugauth_token" path="/users/{slug}/auth_token">
      <param name="slug" style="template" type="xsd:string" required="true">
        <doc title="slug" xml:lang="en">username of the user</doc>
      </param>
      <method id="getTokenFromUsername" name="GET">
        <doc title="getTokenFromUsername" xml:lang="en">Duplicate of `GET /user_auth_token`, with the `slug` in the path; abandoned with a switch from usernames to emails for login credentials</doc>
        <request>
          <param name="password" style="query" type="xsd:string" required="true">
            <doc title="password" xml:lang="en">password of the user</doc>
          </param>
        </request>
        <response status="200">
          <doc title="200" xml:lang="en">success</doc>
          <representation element="tns:getTokenFromUsername_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_usersanything" path="/users/{anything}">
      <param name="anything" style="template" type="tns:anything" required="true">
        <doc title="anything" xml:lang="en">ignored; use "me"</doc>
      </param>
      <method id="getUser" name="GET">
        <doc title="getUser" xml:lang="en">Get the current user</doc>
        <request />
        <response status="200">
          <doc title="200" xml:lang="en">User object</doc>
          <representation element="tns:getUser_Response" mediaType="application/json" />
        </response>
      </method>
    </resource>
    <resource id="_" path="/">
      <method id="getVersion" name="GET">
        <doc title="getVersion" xml:lang="en">The Nanobox API no longer exposes this endpoint, but Microbox will for purposes of detecting the difference in future releases when that starts to matter.</doc>
        <request />
        <response status="200">
          <doc title="200" xml:lang="en">A JSON object with the name and version of the API.</doc>
          <representation element="tns:getVersion_Response" mediaType="application/json" />
        </response>
        <response status="404">
          <doc title="404" xml:lang="en">Returned by Nanobox.</doc>
        </response>
      </method>
    </resource>
  </resources>
</application>