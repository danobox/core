#%RAML 1.0
title: Microbox Core API
version: 1.0.0
baseUri: https://virtserver.swaggerhub.com/danhunsaker/Microbox/1.0.0
baseUriParameters: {}
protocols:
- HTTPS
documentation:
- title: Microbox Core API
  content: The full API spec for Microbox Core, and other Nanobox-v1-compatible dashboard and coordination servers.
securitySchemes:
  auth:
    type: Pass Through
    describedBy:
      queryParameters:
        auth_token:
          required: true
          displayName: auth_token
          type: string
types:
  App:
    displayName: App
    type: object
    properties:
      id:
        required: false
        displayName: id
        type: string
      name:
        required: false
        displayName: name
        type: string
      timezone:
        required: false
        displayName: timezone
        type: string
      state:
        required: false
        displayName: state
        type: string
      auto_reconfigure:
        required: false
        displayName: auto_reconfigure
        type: boolean
  Component:
    displayName: Component
    type: object
    properties:
      id:
        required: false
        displayName: id
        type: string
      name:
        required: false
        displayName: name
        type: string
      uid:
        required: false
        displayName: uid
        type: string
      deploy_strategy:
        required: false
        displayName: deploy_strategy
        type: string
      repair_strategy:
        required: false
        displayName: repair_strategy
        type: string
      behaviors:
        required: false
        displayName: behaviors
        type: array
        items:
          type: string
      port:
        required: false
        displayName: port
        type: integer
        format: int32
      state:
        required: false
        displayName: state
        type: string
      pulse:
        required: false
        displayName: pulse
        type: string
      category:
        required: false
        displayName: category
        type: string
      network:
        required: false
        displayName: network
        type: string
      generation_counter:
        required: false
        displayName: generation_counter
        type: integer
        format: int32
      horizontal:
        required: false
        displayName: horizontal
        type: boolean
      redundant:
        required: false
        displayName: redundant
        type: boolean
  Deploy:
    displayName: Deploy
    type: object
    properties:
      id:
        required: false
        displayName: id
        type: string
      commit_message:
        required: false
        displayName: commit_message
        type: string
      boxfile_content:
        required: false
        displayName: boxfile_content
        type: string
      build_id:
        required: false
        displayName: build_id
        type: string
      author_id:
        required: false
        displayName: author_id
        type: string
      app_id:
        required: false
        displayName: app_id
        type: string
  Evar:
    displayName: Evar
    type: object
    properties:
      id:
        required: false
        displayName: id
        type: string
      title:
        required: false
        displayName: title
        type: string
      value:
        required: false
        displayName: value
        type: string
      internal:
        required: false
        displayName: internal
        type: boolean
      component_id:
        required: false
        displayName: component_id
        type: string
  Service:
    displayName: Service
    type: object
    properties:
      id:
        required: false
        displayName: id
        type: string
      uid:
        required: false
        displayName: uid
        type: string
      name:
        required: false
        displayName: name
        type: string
      slug:
        required: false
        displayName: slug
        type: string
      url:
        required: false
        displayName: url
        type: string
      token:
        required: false
        displayName: token
        type: string
      mode:
        required: false
        displayName: mode
        type: string
      ip:
        required: false
        displayName: ip
        type: string
  User:
    displayName: User
    type: object
    properties:
      id:
        required: false
        displayName: id
        type: string
      username:
        required: false
        displayName: username
        type: string
      email:
        required: false
        displayName: email
        type: string
      authentication_token:
        required: false
        displayName: authentication_token
        type: string
      unconfirmed_email:
        required: false
        displayName: unconfirmed_email
        type: boolean
  AdaptersRequest:
    displayName: AdaptersRequest
    type: object
    properties:
      endpoint:
        required: false
        displayName: endpoint
        description: the base URL to use for requests to the adapter
        type: string
  AdaptersResponse:
    displayName: AdaptersResponse
    type: object
    properties:
      unlink_code:
        required: false
        displayName: unlink_code
        description: a code used to confirm a request to unregister this adapter is legitimate
        type: string
  AppsConsolesResponse:
    displayName: AppsConsolesResponse
    type: object
    properties:
      token:
        required: false
        displayName: token
        type: string
      url:
        required: false
        displayName: url
        type: string
      protocol:
        required: false
        displayName: protocol
        type: string
  AppsDeploysRequest:
    displayName: AppsDeploysRequest
    type: object
    properties:
      boxfile_content:
        required: false
        displayName: boxfile_content
        type: string
      build_id:
        required: false
        displayName: build_id
        type: string
      commit_message:
        required: false
        displayName: commit_message
        type: string
  AppsEvarsRequest:
    displayName: AppsEvarsRequest
    type: object
    properties:
      title:
        required: false
        displayName: title
        type: string
      value:
        required: false
        displayName: value
        type: string
  AppsTunnelsResponse:
    displayName: AppsTunnelsResponse
    type: object
    properties:
      token:
        required: false
        displayName: token
        type: string
      url:
        required: false
        displayName: url
        type: string
      protocol:
        required: false
        displayName: protocol
        type: string
      port:
        required: false
        displayName: port
        type: integer
        format: int32
  Event:
    displayName: Event
    description: the details to create the event with
    type: object
    properties:
      eventable_id:
        required: false
        displayName: eventable_id
        description: the app name
        type: string
      message:
        required: false
        displayName: message
        description: the message
        type: string
      action:
        required: false
        displayName: action
        description: the action
        type: string
      meta:
        required: false
        displayName: meta
        description: any additional data
        type: object
        properties: {}
  Events422Error:
    displayName: Events422Error
    type: object
    properties:
      error:
        required: false
        displayName: error
        type: string
  EventsRequest:
    displayName: EventsRequest
    type: object
    properties:
      event:
        required: false
        displayName: event
        description: the details to create the event with
        type: Event
  EventsResponse:
    displayName: EventsResponse
    description: the details of the created event
    type: object
    properties:
      user:
        required: false
        displayName: user
        type: User
      eventable:
        required: false
        displayName: eventable
        type: App
      message:
        required: false
        displayName: message
        description: the message
        type: string
      action:
        required: false
        displayName: action
        description: the action
        type: string
      meta:
        required: false
        displayName: meta
        description: any meta data passed in
        type: object
        properties: {}
  Response:
    displayName: Response
    type: object
    properties:
      name:
        required: false
        displayName: name
        description: the name of the API provider
        type: string
      version:
        required: false
        displayName: version
        description: the API version
        type: string
  UserAuthTokenResponse:
    displayName: UserAuthTokenResponse
    type: object
    properties:
      authentication_token:
        required: false
        displayName: authentication_token
        description: the user's authentication token, for accessing this API
        type: string
      id:
        required: false
        displayName: id
        description: the UUID of the user
        type: string
  UsersAuthTokenResponse:
    displayName: UsersAuthTokenResponse
    type: object
    properties:
      authentication_token:
        required: false
        displayName: authentication_token
        description: the user's authentication token, for accessing this API
        type: string
      id:
        required: false
        displayName: id
        description: the UUID of the user
        type: string
/apps:
  get:
    displayName: listApps
    description: List all accessible apps.
    securedBy:
    - auth
    responses:
      200:
        description: success
        headers:
          Content-Type:
            default: application/json
            displayName: Content-Type
            type: string
        body:
          application/json:
            displayName: response
            description: success
            type: array
            items:
              type: App
  /{app}:
    uriParameters:
      app:
        required: true
        example:
          value: 00000000-0000-0000-0000-000000000000
        displayName: app
        description: the application's UUID or name
        type: string
    get:
      displayName: getApp
      description: Get information about a specific app.
      securedBy:
      - auth
      queryParameters:
        ci:
          required: false
          displayName: ci
          description: the application's team name, if `{app}` is a name
          type: string
      responses:
        200:
          description: success
          headers:
            Content-Type:
              default: application/json
              displayName: Content-Type
              type: string
          body:
            application/json:
              displayName: response
              description: success
              type: App
    /components:
      get:
        displayName: listComponents
        description: List components in a given app.
        securedBy:
        - auth
        queryParameters:
          ci:
            required: false
            displayName: ci
            description: the application's team name, if `{app}` is a name
            type: string
        responses:
          200:
            description: success
            headers:
              Content-Type:
                default: application/json
                displayName: Content-Type
                type: string
            body:
              application/json:
                displayName: response
                description: success
                type: array
                items:
                  type: Component
      /{component}:
        uriParameters:
          component:
            required: true
            example:
              value: 00000000-0000-0000-0000-000000000000
            displayName: component
            description: the component's UUID
            type: string
        get:
          displayName: getComponent
          description: Get information about a specific component in a given app.
          securedBy:
          - auth
          queryParameters:
            ci:
              required: false
              displayName: ci
              description: the application's team name, if `{app}` is a name
              type: string
          responses:
            200:
              description: success
              headers:
                Content-Type:
                  default: application/json
                  displayName: Content-Type
                  type: string
              body:
                application/json:
                  displayName: response
                  description: success
                  type: Component
    /deploys:
      get:
        displayName: listDeploys
        description: List deploys in a given app.
        securedBy:
        - auth
        queryParameters:
          ci:
            required: false
            displayName: ci
            description: the application's team name, if `{app}` is a name
            type: string
        responses:
          200:
            description: success
            headers:
              Content-Type:
                default: application/json
                displayName: Content-Type
                type: string
            body:
              application/json:
                displayName: response
                description: success
                type: array
                items:
                  type: Deploy
      post:
        displayName: createDeploy
        description: Create a new deploy.
        body:
          application/json:
            displayName: body
            type: AppsDeploysRequest
        securedBy:
        - auth
        queryParameters:
          ci:
            required: false
            displayName: ci
            description: the application's team name, if `{app}` is a name
            type: string
        responses:
          200:
            description: success
            headers:
              Content-Type:
                default: application/json
                displayName: Content-Type
                type: string
            body:
              application/json:
                displayName: response
                description: success
                type: Deploy
      /{deploy}:
        uriParameters:
          deploy:
            required: true
            example:
              value: 00000000-0000-0000-0000-000000000000
            displayName: deploy
            description: the deploy's UUID
            type: string
        get:
          displayName: getDeploy
          description: Get information about a specific deploy in a given app.
          securedBy:
          - auth
          queryParameters:
            ci:
              required: false
              displayName: ci
              description: the application's team name, if `{app}` is a name
              type: string
          responses:
            200:
              description: success
              headers:
                Content-Type:
                  default: application/json
                  displayName: Content-Type
                  type: string
              body:
                application/json:
                  displayName: response
                  description: success
                  type: Deploy
    /evars:
      get:
        displayName: listEvars
        description: List environment variables in a given app.
        securedBy:
        - auth
        queryParameters:
          ci:
            required: false
            displayName: ci
            description: the application's team name, if `{app}` is a name
            type: string
        responses:
          200:
            description: success
            headers:
              Content-Type:
                default: application/json
                displayName: Content-Type
                type: string
            body:
              application/json:
                displayName: response
                description: success
                type: array
                items:
                  type: Evar
      post:
        displayName: createEvar
        description: Add or set an environment variable.
        body:
          application/json:
            displayName: body
            type: AppsEvarsRequest
        securedBy:
        - auth
        queryParameters:
          ci:
            required: false
            displayName: ci
            description: the application's team name, if `{app}` is a name
            type: string
        responses:
          200:
            description: success
            headers:
              Content-Type:
                default: application/json
                displayName: Content-Type
                type: string
            body:
              application/json:
                displayName: response
                description: success
                type: Evar
      /{evar}:
        uriParameters:
          evar:
            required: true
            example:
              value: 00000000-0000-0000-0000-000000000000
            displayName: evar
            description: the evar's UUID
            type: string
        get:
          displayName: getEvar
          description: Get information about a specific environment variable in a given app.
          securedBy:
          - auth
          queryParameters:
            ci:
              required: false
              displayName: ci
              description: the application's team name, if `{app}` is a name
              type: string
          responses:
            200:
              description: success
              headers:
                Content-Type:
                  default: application/json
                  displayName: Content-Type
                  type: string
              body:
                application/json:
                  displayName: response
                  description: success
                  type: Evar
        delete:
          displayName: deleteEvar
          description: Delete an environment variable.
          securedBy:
          - auth
          queryParameters:
            ci:
              required: false
              displayName: ci
              description: the application's team name, if `{app}` is a name
              type: string
          responses:
            200:
              description: success
    /tunnels/{id}:
      uriParameters:
        id:
          required: true
          example:
            value: data.db
          displayName: id
          description: the name of the server or component to tunnel into
          type: string
      get:
        displayName: openTunnel
        description: Create a tunnel, and get the connection parameters.
        securedBy:
        - auth
        queryParameters:
          ci:
            required: false
            displayName: ci
            description: the application's team name, if `{app}` is a name
            type: string
        responses:
          200:
            description: success
            headers:
              Content-Type:
                default: application/json
                displayName: Content-Type
                type: string
            body:
              application/json:
                displayName: response
                description: success
                type: AppsTunnelsResponse
    /consoles/{id}:
      uriParameters:
        id:
          required: true
          example:
            value: do.1
          displayName: id
          description: the name of the server or component to console into
          type: string
      get:
        displayName: openConsole
        description: Create a console session, and get the connection parameters.
        securedBy:
        - auth
        queryParameters:
          ci:
            required: false
            displayName: ci
            description: the application's team name, if `{app}` is a name
            type: string
        responses:
          200:
            description: success
            headers:
              Content-Type:
                default: application/json
                displayName: Content-Type
                type: string
            body:
              application/json:
                displayName: response
                description: success
                type: AppsConsolesResponse
    /services:
      get:
        displayName: listServices
        description: List services in a given app.
        securedBy:
        - auth
        queryParameters:
          ci:
            required: false
            displayName: ci
            description: the application's team name, if `{app}` is a name
            type: string
        responses:
          200:
            description: success
            headers:
              Content-Type:
                default: application/json
                displayName: Content-Type
                type: string
            body:
              application/json:
                displayName: response
                description: success
                type: array
                items:
                  type: Service
      /{service}:
        uriParameters:
          service:
            required: true
            example:
              value: 00000000-0000-0000-0000-000000000000
            displayName: service
            description: the service's UUID or slug
            type: string
        get:
          displayName: getService
          description: Get information about a specific service in a given app.
          securedBy:
          - auth
          queryParameters:
            ci:
              required: false
              displayName: ci
              description: the application's team name, if `{app}` is a name
              type: string
          responses:
            200:
              description: success
              headers:
                Content-Type:
                  default: application/json
                  displayName: Content-Type
                  type: string
              body:
                application/json:
                  displayName: response
                  description: success
                  type: Service
        /components:
          get:
            displayName: listServiceComponents
            description: List components in a given service of a given app.
            securedBy:
            - auth
            queryParameters:
              ci:
                required: false
                displayName: ci
                description: the application's team name, if `{app}` is a name
                type: string
            responses:
              200:
                description: success
                headers:
                  Content-Type:
                    default: application/json
                    displayName: Content-Type
                    type: string
                body:
                  application/json:
                    displayName: response
                    description: success
                    type: array
                    items:
                      type: Component
          /{component}:
            uriParameters:
              component:
                required: true
                example:
                  value: 00000000-0000-0000-0000-000000000000
                displayName: component
                description: the component's UUID
                type: string
            get:
              displayName: getServiceComponent
              description: Get information about a specific component in a given service of a given app.
              securedBy:
              - auth
              queryParameters:
                ci:
                  required: false
                  displayName: ci
                  description: the application's team name, if `{app}` is a name
                  type: string
              responses:
                200:
                  description: success
                  headers:
                    Content-Type:
                      default: application/json
                      displayName: Content-Type
                      type: string
                  body:
                    application/json:
                      displayName: response
                      description: success
                      type: Component
/events:
  post:
    displayName: createEvent
    description: Create an event
    body:
      application/json:
        displayName: body
        type: EventsRequest
    securedBy:
    - auth
    responses:
      200:
        description: success
        headers:
          Content-Type:
            default: application/json
            displayName: Content-Type
            type: string
        body:
          application/json:
            displayName: response
            description: success
            type: EventsResponse
      422:
        description: unprocessable_entity
        body:
          application/json:
            description: unprocessable_entity
            type: Events422Error
/user_auth_token:
  get:
    displayName: getToken
    description: Look up the auth token of the user
    queryParameters:
      slug:
        required: true
        example:
          value: johndoe@example.com
        displayName: slug
        description: email address of the user
        type: string
      password:
        required: true
        example:
          value: P@ssw0rd
        displayName: password
        description: password of the user
        type: string
    responses:
      200:
        description: success
        headers:
          Content-Type:
            default: application/json
            displayName: Content-Type
            type: string
        body:
          application/json:
            displayName: response
            description: success
            type: UserAuthTokenResponse
/:
  get:
    displayName: getVersion
    description: The Nanobox API no longer exposes this endpoint, but Microbox will for purposes of detecting the difference in future releases when that starts to matter.
    responses:
      200:
        description: A JSON object with the name and version of the API.
        headers:
          Content-Type:
            default: application/json
            displayName: Content-Type
            type: string
        body:
          application/json:
            displayName: response
            description: A JSON object with the name and version of the API.
            type: Response
      404:
        description: Returned by Nanobox.
        body: {}
/adapters/{token}:
  uriParameters:
    token:
      required: true
      displayName: token
      description: the adapter registration token generated by the dashboard for this adapter
      type: string
  post:
    displayName: registerHostingProvider
    description: Register a hosting provider adapter
    body:
      application/json:
        displayName: body
        type: AdaptersRequest
    securedBy:
    - auth
    responses:
      202:
        description: success
        headers:
          Content-Type:
            default: application/json
            displayName: Content-Type
            type: string
        body:
          application/json:
            displayName: response
            description: success
            type: AdaptersResponse
  delete:
    displayName: unregisterHostingProvider
    description: Unregister a hosting provider adapter
    securedBy:
    - auth
    queryParameters:
      unlink_code:
        required: true
        displayName: unlink_code
        description: the unlink_code returned when this adapter was registered
        type: string
    responses:
      200:
        description: success
/users:
  /{slug}/auth_token:
    uriParameters:
      slug:
        required: true
        example:
          value: johndoe
        displayName: slug
        description: username of the user
        type: string
    get:
      displayName: getTokenFromUsername
      description: Duplicate of `GET /user_auth_token`, with the `slug` in the path; abandoned with a switch from usernames to emails for login credentials
      queryParameters:
        password:
          required: true
          example:
            value: P@ssw0rd
          displayName: password
          description: password of the user
          type: string
      responses:
        200:
          description: success
          headers:
            Content-Type:
              default: application/json
              displayName: Content-Type
              type: string
          body:
            application/json:
              displayName: response
              description: success
              type: UsersAuthTokenResponse
  /{anything}:
    uriParameters:
      anything:
        required: true
        displayName: anything
        description: ignored; use "me"
        type: string
        enum:
        - me
    get:
      displayName: getUser
      description: Get the current user
      securedBy:
      - auth
      responses:
        200:
          description: User object
          headers:
            Content-Type:
              default: application/json
              displayName: Content-Type
              type: string
          body:
            application/json:
              displayName: response
              description: User object
              type: User
